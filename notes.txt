// src/test/java/.../DataSourceConfigurationSpringBootTests.java
package your.pkg;

import com.zaxxer.hikari.HikariDataSource;
import jakarta.annotation.Resource;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.ApplicationContext;
import org.springframework.test.context.ActiveProfiles;

import javax.sql.DataSource;

import static org.assertj.core.api.Assertions.assertThat;

@SpringBootTest(
  properties = {
    // Provide both writer/reader props for the live context
    "spring.datasource.writer.url=jdbc:h2:mem:writer;MODE=MySQL;DB_CLOSE_DELAY=-1",
    "spring.datasource.writer.username=sa",
    "spring.datasource.writer.password=",
    "spring.datasource.writer.hikari.pool-name=writer-pool",

    "spring.datasource.reader.url=jdbc:h2:mem:reader;MODE=MySQL;DB_CLOSE_DELAY=-1",
    "spring.datasource.reader.username=sa",
    "spring.datasource.reader.password=",
    "spring.datasource.reader.hikari.pool-name=reader-pool"
  }
)
@ActiveProfiles("prod") // allowed (not in the excluded set)
class DataSourceConfigurationSpringBootTests {

  @Autowired ApplicationContext ctx;

  @Autowired DataSource dataSource; // should resolve to @Primary writer

  @Autowired @Qualifier("writerDataSource")
  HikariDataSource writer;

  @Autowired @Qualifier("readerDataSource")
  HikariDataSource reader;

  @Test
  void primaryDataSourceIsWriter() {
    assertThat(dataSource).isSameAs(writer);
    assertThat(writer.getPoolName()).isEqualTo("writer-pool");
    assertThat(reader.getPoolName()).isEqualTo("reader-pool");
  }

  @Test
  void bothBeansPresentInProd() {
    assertThat(ctx.getBeansOfType(HikariDataSource.class)).hasSize(2);
  }
}

@SpringBootTest
@ActiveProfiles("test") // excluded by profile condition
class DataSourceConfigurationExcludedProfilesTests {
  @Autowired ApplicationContext ctx;

  @Test
  void beansAreNotLoadedInExcludedProfiles() {
    assertThat(ctx.getBeansOfType(HikariDataSource.class)).isEmpty();
  }
}
