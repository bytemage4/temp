# Shorten "feature/NT-123-long-title" -> "NT-123"
_shorten_ticket() {
  emulate -L zsh
  local base=${1##*/}
  if [[ $base =~ ([A-Za-z][A-Za-z0-9]*-[0-9]+) ]]; then
    print -r -- ${match[1]}
  else
    print -r -- $base
  fi
}

git_prompt_info() {
  emulate -L zsh
  local b short gs prefix suffix
  b=$(
    command git symbolic-ref --quiet --short HEAD 2>/dev/null ||
    command git describe --tags --exact-match 2>/dev/null ||
    command git rev-parse --short HEAD 2>/dev/null
  ) || return

  short=$(_shorten_ticket "$b")
  [[ $+functions[git_prompt_status] -eq 1 ]] && gs="$(git_prompt_status)"

  # Use themeâ€™s prefix/suffix if present; otherwise fall back to robbyrussell-like colors
  if [[ -n $ZSH_THEME_GIT_PROMPT_PREFIX ]]; then
    prefix="$ZSH_THEME_GIT_PROMPT_PREFIX"
  else
    prefix="%{$fg_bold[green]%}git:(%{$reset_color%}"
  fi

  if [[ -n $ZSH_THEME_GIT_PROMPT_SUFFIX ]]; then
    suffix="$ZSH_THEME_GIT_PROMPT_SUFFIX"
  else
    # Colored closing paren (green), then reset
    suffix="%{$fg_bold[green]%})%{$reset_color%}"
  fi

  # If suffix lacks a closing paren, prepend a green one so the bracket is colored correctly
  if [[ $suffix != *")"* ]]; then
    suffix="%{$fg_bold[green]%})%{$reset_color%}${suffix}"
  fi

  print -r -- "${prefix}${short}${gs}${suffix}"
}
