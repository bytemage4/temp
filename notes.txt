git_prompt_info() {
  emulate -L zsh
  local b short gs prefix suffix open_color derived_suffix

  # 1) Compute branch and status
  b=$(
    command git symbolic-ref --quiet --short HEAD 2>/dev/null ||
    command git describe --tags --exact-match 2>/dev/null ||
    command git rev-parse --short HEAD 2>/dev/null
  ) || return
  short=$(_shorten_ticket "$b")
  [[ $+functions[git_prompt_status] -eq 1 ]] && gs="$(git_prompt_status)"

  # 2) Take themeâ€™s prefix/suffix (fall back to robbyrussell-like if unset)
  prefix="${ZSH_THEME_GIT_PROMPT_PREFIX:-%{$fg_bold[green]%}git:(%{$reset_color%}}"
  suffix="$ZSH_THEME_GIT_PROMPT_SUFFIX"

  # 3) Derive the opening bracket color from the prefix (so we can match it)
  #    Works with the common oh-my-zsh style: %{$fg_bold[green]%}
  if [[ -z $open_color && $prefix =~ (%\{\$[^%]*%}) ]]; then
    open_color="${match[1]}"
  fi
  [[ -z $open_color ]] && open_color="%{$fg_bold[green]%}"  # sane default

  # 4) Build a suffix that includes a colored ')' matching the opening bracket.
  if [[ -z $suffix ]]; then
    derived_suffix="${open_color})%{$reset_color%}"
  elif [[ $suffix != *")"* ]]; then
    # Theme suffix has no ')': prepend a colored one that matches the opening paren
    derived_suffix="${open_color})%{$reset_color%}${suffix}"
  else
    derived_suffix="$suffix"
  fi

  print -r -- "${prefix}${short}${gs}${derived_suffix}"
}
